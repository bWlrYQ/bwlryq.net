[{"content":"Introduction During Flag\u0026rsquo;Malo #6 the yearly CTF organized by my university department, I gave a quick talk on VLAN Hopping techniques. This vulnerability is a well known layer 2 exploit that can be used to sniff the network traffic from other VLAN\u0026rsquo;s and access hosts that are on a different VLAN than the one the attacker is originally in.\nThe slides (in French) from the talk can be found on my GitHub by clicking here.\nThis post is made for educational purpose only, for legal reasons you are not allowed to reproduce any of these VLAN hopping techniques on a network except if you have received the explicit written permission of the owner. However you can still train by building a virtual network using GNS3 (or other).\nVLANs - Quick Reminder  Disclaimer: these few paragraphs are not a course or a lesson about VLANs, I highly recommend following a real one before trying to exploit anything linked to VLANs, it\u0026rsquo;ll allow you to understand way better any concept linked to this technology.\n VLANS - Introduction First of all, for those of you reading this post that wouldn\u0026rsquo;t know about VLANs let\u0026rsquo;s take a quick look at what they are. If ever you do already master everything you need to know related to VLANs and how they work, you can directly jump to VLAN Hopping - Techniques.\nSo, what are VLANs ? By definition (Wikipedia):\n \u0026ldquo;A virtual local area network (VLAN) is any broadcast domain that is partitioned and isolated in a computer network at the data link layer (OSI layer 2). In this context, virtual, refers to a physical object recreated and altered by additional logic, within the local area network. VLANs work by applying tags to network frames and handling these tags in networking systems â€“ creating the appearance and functionality of network traffic that is physically on a single network but acts as if it is split between separate networks. In this way, VLANs can keep network applications separate despite being connected to the same physical network, and without requiring multiple sets of cabling and networking devices to be deployed.\u0026rdquo;\n This definition is not really easy to get around with so let\u0026rsquo;s try and simplify things. Let\u0026rsquo;s imagine I\u0026rsquo;m a sysadmin, working for a small company and for security reasons I do not want HR\u0026rsquo;s to be able to be on the same network as the secretary team, nor the accountability team etc\u0026hellip; I can put them all on different LAN\u0026rsquo;s (192.168.1.0/24, 192.168.2.0/24 \u0026hellip;) and then forward of all these networks to my company\u0026rsquo;s router. This solution is functional but it asks way too much switches and it complexifies the network infrastructure. Basically using this solution would make my network look like that:\nThis isn\u0026rsquo;t conceivable. VLAN\u0026rsquo;s allow us to segment an defined network into different LANs isolated from each other. Each VLAN will have an associated number (eg VLAN 100, VLAN 200 etc\u0026hellip;). This layer 2 ((Wikipedia)[https://en.wikipedia.org/wiki/Data_link_layer]) technology will permit us to have the security and the isolation aspect while reducing the number of switches and the physical complexity of the infrastructure. Using VLANs, the network I talked about just before would look like this:\nTo sum up VLANs have multiple advantages, they:\n Reduce network infrastructure costs Improve physical infrastructure topology Reinforce the security aspect  VLANs - Modes For now there is a problem with what we\u0026rsquo;ve said about VLANs, we can easily guess all the employees aren\u0026rsquo;t working in the same room so what happens if they are not. How can we make a VLAN go from a switch to an other ? We could have one link per VLAN between two switches but that would go against the concept of improving the network infrastructure, it would be a lot of cables for nothing and use up a lot of ports on our switches.\nWe can now introduce \u0026ldquo;modes\u0026rdquo; there are two modes for a port when we are using vlans, either the access mode or the trunk mode. An access port is a port that will only let one specific vlan pass, it\u0026rsquo;s the \u0026ldquo;default\u0026rdquo; mode when you plug-in a host to a switch (if VLANs are enabled). The second mode called trunk allows you to pass multiple VLANs on one link. This trunk mode is only meant to be used between two switches.\nLet\u0026rsquo;s take our previous diagram, imagine that our employees our splitted in two different open spaces and adapt it with a trunk link:\nNow that we know about the basics we can jump to the theory about how to exploit VLANs.\nVLAN Hopping - Techniques By default VLANs aren\u0026rsquo;t unsecure, the vulnerabilities linked to VLANs are due to misconfigurations. For this post i\u0026rsquo;ll introduce two different methods that could allow you to attack a network that has been secures using VLANs.\nMethod 1: Double Tagging The first method I\u0026rsquo;m going to talk about is Double Tagging, as I said every VLAN has an assigned number. In order to transmit ethernet frames accross the network, switches mark those frames with what we call a \u0026ldquo;tag\u0026rdquo;. So each frame has a tag that contains the number of the VLAN.\nWe all know networking works on a layer basis with an encapsulation/decapsulation process. When a switch receives a packet from a host it adds a vlan tag but before sending it back to the destination host it\u0026rsquo;ll take off the tag. So what happens if we craft our own packet and tag it with the VLAN number we want ?\nWell it will not work just like that as I said VLANs are by default secure, we need some particular conditions. By default even if there aren\u0026rsquo;t any specific VLANs there still is one active VLAN, what we call the \u0026ldquo;native vlan\u0026rdquo; and it\u0026rsquo;s number is one. By default this VLAN is not tagged because it\u0026rsquo;s the default VLAN. So if a switch receives a frame tagged with the default VLAN it\u0026rsquo;ll take it off before sending it back to an other switch.\nCan you spot the problem ðŸ˜² ? In a network configuration when we go through at least two switches and we are plugged to a port that is in the default VLAN we can craft a malicious packet with two consecutive tags. The first one will be the default VLAN (eg 1 or an other) and the second the VLAN we are trying to access.\nThe following diagram illustrates the vulnerability:\nThis attack is really easy to set up but it has a big flaw, you can\u0026rsquo;t receive any traffic from an other VLAN, you can only send packets to an other host on an other VLAN.\nMethod 2: Switch Spoofing The second method is way more interesting than the first one because it allows you to act just as if you were in the VLAN you are attacking, it\u0026rsquo;s not limited like the precedent method. Yet there is still an important factor that needs to be taken into account, it is specific to Cisco switches (widespread equipments so not a real problem).\nFirst, let\u0026rsquo;s bash Cisco a bit !\nNow we can introduce DTP, the Dynamic Trunking Protocol developed by Cisco for Cisco systems. This protocol aims to allow switches to negotiate automatically the establishment of a trunk link between switches. By default DTP is active, you need to deactive it if you want to freeze a port on access mode.\nThere are two DTP modes for a port, dynamic auto or dynamic desirable. In auto mode the switch is actively listening for a DTP frame in order to negotiate and set up a trunk link. In desirable mode the switch is actively sending DTP frames to tell a switch \u0026ldquo;hey hello, I\u0026rsquo;m waiting for a trunk to bet established\u0026rdquo;.\nWe can look at how a trunk link is established between two hosts when we plug a host to a switch that is willing to set up a trink with this diagram:\nOnce our trunk is established, we can communicate to any VLAN of the network.\nSimple Attack Scenario Theory is cool but now let\u0026rsquo;s practice ! We can imagine a small scenario with a simple company network where we are in a VLAN and want to hop to an other one. Here it is (simplified):\nSo, PC1 is in VLAN 100 with the IP address 192.168.100.1/24 and PC2\u0026rsquo;s IP address is 192.168.100.254/24 in VLAN 200. The configuration of the switch is the following (some useless parts have been snipped):\nversion 15.0 ! hostname switch_entreprise ! interface GigabitEthernet0/1 description **Machine VLAN 100** switchport access vlan 100 switchport mode access ! interface GigabitEthernet0/2 description **Vlan 100 access, trunk dynamic desirable** switchport trunk encapsulation dot1q switchport trunk native vlan 100 switchport mode dynamic desirable ! ! SAME FOR Gi0/3 - Gi0/6 ! interface GigabitEthernet0/7 description **Vlan 100 access, trunk dynamic desirable** switchport trunk encapsulation dot1q switchport trunk native vlan 100 switchport mode dynamic desirable ! interface GigabitEthernet0/8 description **Machine VLAN 200** switchport access vlan 200 switchport mode access ! interface GigabitEthernet0/9 description **Shut** shutdown ! interface GigabitEthernet0/10 description **Shut** shutdown ! interface Vlan1 ip address 192.168.100.1 255.255.255.0 shutdown ! interface Vlan100 ip address 192.168.100.1 255.255.255.0 ! interface Vlan200 no ip address We can see that the ports Gi0/2 to Gi0/7 are in VLAN 100 but DTP isn\u0026rsquo;t deactivated. This means that if we link a host that isn\u0026rsquo;t a Cisco switch then it\u0026rsquo;ll be in VLAN 100 on an access port. However, if ever we manage to connect a Cisco switch and establish a trunk link using DTP then we\u0026rsquo;ll be able to hop into any VLAN.\nProof Of Concept Time to exploit ! Let\u0026rsquo;s say the ports Gi0/2 to Gi0/7 are all connected to different rooms of the company for employees to plug to in order to get access to Internet and work. The usage is legitimate so we will not encounter any problem.\nMethod 1 If ever I bring my own switch and plug it to the network, just like this:\nFirst let\u0026rsquo;s grab our IP:\nTry and ping PC1 and the IP of VLAN 100\u0026rsquo;s interface:\nAnd now ping PC2 (in VLAN200):\nWithout any surprise, we can\u0026rsquo;t ping PC2 but let\u0026rsquo;s fix that ! On our attacker switch we can see that a trunk link has been established automatically:\nWe just need to put our attacker host in VLAN 200 using this set of commands:\nconf t int Gi0/8 switchport mode access switchport access vlan 200 exit int Gi0/1 switchport trunk native vlan 100 end And now ping PC2:\nIt\u0026rsquo;s a success ! We\u0026rsquo;ve hopped from a VLAN to an other without modifying the actual network state.\nMethod 2 Let\u0026rsquo;s say I\u0026rsquo;m really unlucky and have forgotten my super Cisco switch home. That\u0026rsquo;s not a problem, we just need to craft our DTP packet on our own. The network will look like this:\nWe can connect directly our attacker laptop. Take a glance at the trunk on the company switch:\nThere is no sign of a trunk link, but remember, our ports are on Dynamic Desirable mode this means the switch is actively looking to set up a trunk link and seding DTP frames. We can create this simple python script:\n#Imports from scapy.all import * load_contrib(\u0026#39;dtp\u0026#39;) #Var trunk_init = False mac_addr = \u0026#34;00:1b:21:a5:ac:36\u0026#34; interface = \u0026#34;eth0\u0026#34; while not trunk_init: #Listen for DTP frames print(\u0026#34;[~] Listening for DTP packet...\u0026#34;) pkt = sniff(count=1, iface=interface, filter=\u0026#34;ether dst 01:00:0c:cc:cc:cc\u0026#34;) print(\u0026#34;[~] Found DTP packet\u0026#34;) #Craft malicious packet pkt[0].src=mac_addr pkt[0][DTP][DTPStatus].status=\u0026#39;\\x03\u0026#39; #Trunk initialization  print(\u0026#34;[!] Intiating trunk...\u0026#34;) try: sendp(pkt[0], loop=0, verbose=1, iface=interface) print(\u0026#34;[!] Trunk initiated\u0026#34;) trunk_init=True except: print(\u0026#34;[!] Failed intiating trunk\u0026#34;) This script is sniffing on a specified interface for a DTP frame, once it has sniffed it we can replace the MAC source address by ours, change the status to \\x03 that sets it to desirable. Then send back the packet, right after we can see the link goes down and up after half a second.\nHere is the execution of our script:\nWe can now check the trunk status on the company switch:\nAnd we can see the link between the switch and our laptop is now trunk and not an access one. This means we can sniff the traffic coming from others VLANs and even craft our own packets with a specified VLAN tag. In order to verify what I\u0026rsquo;ve just said let\u0026rsquo;s just wait for an ARP request from PC2:\nAnd that\u0026rsquo;s how we can confirm ou PoC (yes I\u0026rsquo;m too lazy to craft my own tagged packets) ! Just for the fun I opened a web server on my attacker host and requested it from PC2, here it is:\nMitigations Okey, we\u0026rsquo;ve been able to exploit VLAN Hopping, but now, how can we avoid getting hopped on our own network and limit the use of VLAN Hopping ? These are a few mitigations that can be applied to switches (I\u0026rsquo;ll give the commands for Cisco switches but you can look for the equivalent for other systems).\nMitigate Double Tagging Double tagging is quite hard to mitigate but you can still drastically limit it by:\n Changing native VLAN  switchport trunk native vlan [vlan number]   Deactivating any protocol that could give information about native VLAN (eg CDP for Cisco)  no cdp run   Force tagging of native VLAN  vlan dot1q tag native    Mitigate Switch Spoofing You can mitigate Switch Spoofing by:\n Deactivating DTP on every port  switchport nonegotiate   Always put ports that are not absolutely needed for a trunk in access mode  switchport mode access   Using the same reccomandations than the ones for Double Tagging  Conclusion In order to conclude this blogpost I would like first of all to thank you for reading until here, if ever you feel this article taught you anything, feel free to share it to friends and on any social network.\nIf ever you think there are some precisions/fixes that should be applied to this post hit me up on socials, Twitter here or on Discord \\`#0001.\nWhat\u0026rsquo;s more, big thanks to Flag\u0026rsquo;Malo for offering me the possibility of giving my first ever talk !\nAnd as I only taunted Cisco two times during this post I would like to do it for a third time :) ","permalink":"https://bwlryq.net/posts/vlan_hopping/","summary":"Blogpost about VLAN Hopping and techniques to exploit this vulnerability.","title":"Networking - VLAN Hopping"},{"content":"Coming soon\u0026hellip;\n","permalink":"https://bwlryq.net/cheatsheets/soon/","summary":"Coming soon\u0026hellip;","title":""},{"content":"Hello there, welcome to this showcase/bloggy website. I\u0026rsquo;m bWlrYQ but most people call me Mika, for understandable reasons right ? I\u0026rsquo;m a 20 years old French student that mainly studies networking and system administration (Windows/Linux) but that is when I\u0026rsquo;m not sleeping\u0026hellip;\nMy studies aren\u0026rsquo;t really oriented towards cybersecurity for now but it still is my passion and I\u0026rsquo;ve been practicing for a couple of years now through platforms such as TryHackMe or Root-Me. I also often participate in CTF\u0026rsquo;s with the EGO+ team. On top of that I\u0026rsquo;m an active member of the Root-Me association and I am a volunteer in the support team since February 2022.\nThis website is for me a place where I can centralize Write-Ups from CTF\u0026rsquo;s, projects I made or even just post some cheatsheets related to IT security. If ever this blog interests you feel free to share it to some other people and don\u0026rsquo;t hesitate to hit me up on social media like Twitter or Discord : \\`#0001.\n","permalink":"https://bwlryq.net/whoami/","summary":"Brief presentation of who I am","title":"Whoami ?"}]
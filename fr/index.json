[{"content":"Introduction Durant le CTF Flag\u0026rsquo;Malo #6 organisé de manière annuelle par mon département universitaire j\u0026rsquo;ai pu donner un talk rapide sur le \u0026ldquo;VLAN Hopping\u0026rdquo; (ou saut de VLAN en bon français). Cette vulnérabilité est une vulnérabilité qui se situe au niveau de la couche 2 et qui peut être utilisée pour sniffer des paquets provenants d\u0026rsquo;autres VLANs ou encore d\u0026rsquo;accéder à des hôtes présents sur d\u0026rsquo;autres VLANs que celui sur lequel se trouve l\u0026rsquo;attaquant à l\u0026rsquo;origine.\nLes slides de cette conférence sont disponibles sur mon GitHub ici.\nCe billet est fait à but éducatif uniquement. Pour des raisons légales vous n\u0026rsquo;êtes pas autorisé à reproduire aucune des techniques présentes sur un réseau à moins que vous ayez reçu la permission écrite et explicite du propriétaire. Quoiqu\u0026rsquo;il en soit vous pouvez toujours construire un réseau virtuel à l\u0026rsquo;aide de GNS3 ou autre (EVE-NG) et pratiquer dessus.\nVLANs - Rappels  Disclaimer: ces quelques paragraphes ne sont pas un cours sur les VLANs, je recommande fortement de suivre un réel cours sur le sujet avant de tenter de réaliser un exploit. Cela n\u0026rsquo;aurait que très peu d\u0026rsquo;intérêt et vous permettra de mieux appréhender cette technologie ainsi que ses usages.\n VLANS - Introduction Pour commencer, pour ceux d\u0026rsquo;entre-vous qui ne connaîtraient pas les VLANs nous pouvons rapidement regarder ce qu\u0026rsquo;ils sont et à quoi ils servent. Pour ceux qui seraient déjà familiers avec le principe, je vous invite à vous rendre directement à ce chapitre VLAN Hopping - Techniques.\nDonc, que sont les VLANs ? Par définition (Wikipedia):\n \u0026ldquo;Un réseau local virtuel, communément appelé VLAN (pour Virtual LAN), est un réseau informatique logique indépendant. De nombreux VLAN peuvent coexister sur un même commutateur réseau ou « switch ». \u0026quot;\n Cette définition est assez courte et peu se montrer obscure pour les \u0026ldquo;non-initiés\u0026rdquo;. Essayons d\u0026rsquo;investiguer un peu plus et imaginons que je suis un administrateur système qui travaille pour une petite entreprise avec peu de moyens. Pour des raisons de sécurité je ne souhaite pas que les comptables puissent accéder à l\u0026rsquo;infrastructure réservées aux RHs et inversement, on peut aussi ajouter une direction et un secrétariat par exemple. Je peux les mettres tous dans un LAN différent par exemple (192.168.1.0/24, 192.168.2.0/24 \u0026hellip;) et ensuite effectuer du routage au niveau de ces différents réseaux mais cela demanderait soit plusieurs routeurs (coûteux) ou un routeur avec de multiples ports (coûteux aussi). C\u0026rsquo;est une solution fonctionnelle mais trop coûteuse en termes d\u0026rsquo;équipement actifs. En utilisant cette solution notre réseau aurait la structure suivante (sans les routeurs)\nCe n\u0026rsquo;est pas vraiment concevable, les VLANs vont nous permettre de segmenter un réseau en différents réseaux isolés les uns des autres. Chaque VLAN aura donc un numéro associé (par exemple VLAN 100, VLAN 200 etc\u0026hellip;). Cette technologie de niveau 2 ((Wikipedia)[https://fr.wikipedia.org/wiki/Couche_liaison_de_donn%C3%A9es]) va nous permettre d\u0026rsquo;avoir la sécurité initalement prévue par notre premier montage tout en réduisant fortement le nombre de switches sur notre réseau ainsi que de simplifier la topologie physique de celui-ci. En utilisant des VLANs sur notre réseau, le résultat serait le suivant (toujours sans routeur):\nEn définitive, les VLANs ont de multiples avantages, ils:\n Réduisent les coûts de l\u0026rsquo;infrastructure Améliorent la topologie physique du réseau Renforcent l\u0026rsquo;aspect de sécurité  VLANs - Modes Pour l\u0026rsquo;instant, il y a un souci au niveau de ce que j\u0026rsquo;ai présenté des VLANs, on peut aisément deviner que tous les employés ne travaillent pas dans la même pièce, alors comment faire s\u0026rsquo;ils sont dans deux pièces séparés et que nous avons deux switches par exemple. Nous n\u0026rsquo;allons pas faire un lien pour chaque VLAN entre les switches, ça n\u0026rsquo;aurait pas de sens et irait à l\u0026rsquo;encontre du concept de simplification de la couche physique.\nOn peut maintenant introduire les modes. Sur les ports d\u0026rsquo;un commutateur, il existe deux modes différents quand on utilise les vlans, le mode accès et le mode trunk. Un port en mode accès ne laissera passer qu\u0026rsquo;un seul VLAN spécifié au préalable. Un port en mode trunk lui permettra de laisser passer un ou plusieurs VLANs. Cela permet donc entre deux commutateurs de n\u0026rsquo;avoir qu\u0026rsquo;un seul lien pour tous les VLANs tout en gardant l\u0026rsquo;aspect de simplicité souhaité. Le mode accès est celui qui est initialement prévu pour les équipements de terminaison (imprimante, ordinateur, serveur, téléphone\u0026hellip;)\nReprenons notre précédent schéma et imaginons que nos employés sont dans deux open space différents, il nous faut donc deux commutateurs que nous allons relier entre eux à l\u0026rsquo;aide d\u0026rsquo;un lien \u0026ldquo;trunk\u0026rdquo;:\nMaintenant que nous avons abordés les essentiels liés aux VLANS (il resterait notamment à discuter du routage inter-vlan mais il n\u0026rsquo;entre pas en compte dans le cadre de cet article qui n\u0026rsquo;a pas pour vocation d\u0026rsquo;être un cours).\nVLAN Hopping - Techniques Par défaut les VLANs sont sécurisés, les vulnérabilités liées à ceux-ci sont dûs à des mauvaises configurations de la part des administrateurs de réseau (ou bien des constructeurs, Cisc\u0026hellip;). Pour ce post, je vais introduire deux méthodes différents qui vous permettraient d\u0026rsquo;exploiter des erreurs de configuration sur un réseau exploitant des VLANs. Méthode 1: Double Tagging La première méthode que je souhaite introduire est la plus simple à mettre en place, il s\u0026rsquo;agit du Double Tagging, comme je l\u0026rsquo;ai dit, chaque VLAN possède un numéro assigné. Afin de transiter entre deux commutateurs, une trame Ethernet se voit taguée avec le numéro du VLAN qui lui est associé afin que chaque commutateur puisse savoir dans quel VLAN est l\u0026rsquo;équipement source. Donc chaque trame possède un numéro de VLAN, intéressant\u0026hellip;\nNous savons que les couches en réseau sont basées sur le principe d\u0026rsquo;encapsulation et de désencapsulation. Quand un switch reçoit un paquet provenant d\u0026rsquo;un hôte alors il va ajouter le tag du VLAN associé au port duquel provient la trame, mais le switch auquel est branché l\u0026rsquo;équipement de destination retirera ce tag afin de lui fournir la trame (les équipements de terminaison n\u0026rsquo;ont pas conscience du concept de VLAN). Alors que se passe-t-il si je craft mon propre paquet et que je le tag avec le numéro de VLAN que je souhaite ?\nEt bien, ce n\u0026rsquo;est pas aussi facile que ça, sinon nous aurions un réel problème\u0026hellip; Par défault les VLANs sont \u0026ldquo;sécurisés\u0026rdquo;, en revanche quand on parle de VLANs il existe la notion de VLAN natif sont numéro est généralement (par défaut) le 1. En résumé, même sans mettre en place de VLANs, vous êtes dans le VLAN1 mais ça n\u0026rsquo;affecte absolument pas le réseau puisque tous les équipements sont dans le même. Ce vlan natif n\u0026rsquo;est donc pas tagué, alors que se passe-t-il si un switch reçoit une trame taguée avec le VLAN par défaut ? Réponse: il va retirer le tag avant de transmettre la trame à un autre commutateur.\nVous commencez à voir le problème ? Dans une configuration réseau qui fait que nous passons par aux moins deux commutateurs et que nous sommes connectés au VLAN par défaut alors nous pouvons crafter un paquet malicieux qui contient deux tags à la suite. Le premier sera le VLAN 1 et le second le VLAN dans lequel on souhaite se rendre.\nLe diagramme suivant illustre la vulnérabilité: Cette attaque est très simple à mettre en place mais elle possède deux grandes failles, on ne peut pas recevoir le traffic d\u0026rsquo;un autre VLAN, on peut uniquement accéder à un hôte qui se trouve dans un autre VLAN. Elle nécessite aussi de se trouver dans une configuration où l\u0026rsquo;on va traverser au moins deux commutateurs.\nMéthode 2: Switch Spoofing La seconde méthode est beaucoup plus intéressante que la première car celle-ci va nous permettre d\u0026rsquo;agir comme si nous étions dans le VLAN que nous attaquons, il n\u0026rsquo;y a pas de limitations comme sur la précédente. Nous pouvons agir comme si nous étions un équipement légitime du VLAN. Quoiqu\u0026rsquo;il en soit il reste un paramètre important à prendre en compte, elle ne fonctionne que sur les équipements de la marque Cisco (pas vraiment un problème car très répandue).\nPour commencer, mettons une petite balle perdue à Cisco ! Nous pouvons maintenant introduire DTP, le \u0026ldquo;Dynamic Trunking Protocol\u0026rdquo;, un protocole propriétaire déstiné aux systèmes Cisco. Ce protocole vise à établir de manière automatique un lien trunk entre deux switches. Par défaut le protocole DTP est actif sur n\u0026rsquo;importe quel switch, il est nécessaire de le désactiver si vous souhaitez fixer un port en mode accès.\nIl existe deux modes intéressants avec DTP pour un port, dynamic auto ou dynamic desirable. En mode auto le switch écoute pour une trame DTP lui indiquant que l\u0026rsquo;on souhaite établir un lien trunk. En mode desirable alors le switch envoie de manière active et régulière des trames DTP montrant qu\u0026rsquo;il souhaite monter un lien trunk.\nOn peut regarder la façon dont un lien trunk est établi entre deux hôtes quand on branche un hôte à un qui souhaite monter un lien trunk avec ce diagramme. Une fois que notre lien trunk est établi, on peut intéragir avec n\u0026rsquo;importe quelle machine de n\u0026rsquo;importe quel VLAN convoyé par le trunk.\nScénario d\u0026rsquo;attaque simple La théorie c\u0026rsquo;est cool mais rien ne vaut la pratique ! On peut imaginer un scénario simple avec un tout petit réseau d\u0026rsquo;entreprise où nous sommes dans un VLAN et on veut sauter de celui-ci vers un autre. Voici le schéma (simplifié) associé: Ici PC1 est dans le VLAN 100 avec l\u0026rsquo;adresse IP 192.168.100.1/24 et PC2 possède l\u0026rsquo;adresse IP 192.168.100.254/24 dans le VLAN 200. Dans cette configuration les deux équipements sont sur le même réseau IP mais dans des VLANs séparés ils sont donc normalement inacessibles si l\u0026rsquo;on est pas dans le VLAN correspondant. La configuration du switch est la suivante (des parties inutiles ont été coupées):\nversion 15.0 ! hostname switch_entreprise ! interface GigabitEthernet0/1 description **Machine VLAN 100** switchport access vlan 100 switchport mode access ! interface GigabitEthernet0/2 description **Vlan 100 access, trunk dynamic desirable** switchport trunk encapsulation dot1q switchport trunk native vlan 100 switchport mode dynamic desirable ! ! SAME FOR Gi0/3 - Gi0/6 ! interface GigabitEthernet0/7 description **Vlan 100 access, trunk dynamic desirable** switchport trunk encapsulation dot1q switchport trunk native vlan 100 switchport mode dynamic desirable ! interface GigabitEthernet0/8 description **Machine VLAN 200** switchport access vlan 200 switchport mode access ! interface GigabitEthernet0/9 description **Shut** shutdown ! interface GigabitEthernet0/10 description **Shut** shutdown ! interface Vlan1 ip address 192.168.100.1 255.255.255.0 shutdown ! interface Vlan100 ip address 192.168.100.1 255.255.255.0 ! interface Vlan200 no ip address On remarque que les ports Gi0/2 à Gi0/7 sont dans le VLAN 100 mais le protocole DTP n\u0026rsquo;est pas désactivé, cela signifie que si nous branchons un équipement qui n\u0026rsquo;est pas un commutateur Cisco alors nous seront par défaut dans le VLAN 100 en mode accès. En revanche, si on connecte un commutateur Cisco alors un lien trunk tentera de s\u0026rsquo;établir entre les deux, faisant alors transiter tous les VLANs.\nProof Of Concept C\u0026rsquo;est l\u0026rsquo;heure d\u0026rsquo;exploiter ce réseau ! Disons que les ports Gi0/2 à Gi0/7 sont brassés vers différentes salles pour permettre à n\u0026rsquo;importe qui de se brancher à Internet sans pouvoir accéder aux machines du VLAN 100. Dans le cadre d\u0026rsquo;une utilisation non malveillante alors nous n\u0026rsquo;auront aucun problème. Dans le cas contraire cette configuration nous réserve quelques surprises.\nMéthode 1 Si nous amenons notre propre switch et le branchons au réseau de la manière suivante:\nAlors notre hôte est connecté à Internet et aura une IP attribuée par un DHCP (que l\u0026rsquo;on imagine). Commençons par récupérer notre IP: Essayons de ping PC1 ainsi que l\u0026rsquo;interface du VLAN 100: Et de ping PC2: Sans grande surprise c\u0026rsquo;est un échec, nous ne pouvons pas pinger PC2 mais essayons de résoudre cela ! Sur notre switch attaquant on peut voir qu\u0026rsquo;un lien trunk s\u0026rsquo;est établi tout de suite et de manière automatique: Nous avons juste à basculer dans le VLAN correspondant à l\u0026rsquo;aide des commandes suivantes:\nconf t int Gi0/8 switchport mode access switchport access vlan 200 exit int Gi0/1 switchport trunk native vlan 100 end Et à envoyer des requêtes ICMP à PC2: C\u0026rsquo;est un succès ! Nous avons sauté d\u0026rsquo;un VLAN à un autre sans toucher à la configuration du réseau dans lequel nous étions. Méthode 2 Disons que je suis vraiment tête en l\u0026rsquo;air et que j\u0026rsquo;ai oublié mon super commutateur Cisco à la maison, rien ne m\u0026rsquo;arrêtera ! J\u0026rsquo;ai juste besoin de forger mes propres paquets DTP, le réseau ressemblera alors à ça: On connecte notre machine attaquante et on regarde l\u0026rsquo;état du lien trunk sur le switch entreprise (c\u0026rsquo;est l\u0026rsquo;avantage du PoC, on peut tout regarder): Il n\u0026rsquo;y a aucun signe d\u0026rsquo;un lien trunk, mais rappelez-vous en mode desirable un port est en recherche active de l\u0026rsquo;établissement d\u0026rsquo;un lien trunk. Il envoie des donc des trames DTP à notre hôte (qui les ignore car elles ne lui sont pas destinées). En sniffant le traffic, on peut récupérer ce paquet DTP et le modifier afin de monter un lien trunk avec le script suivant:\n#Imports from scapy.all import * load_contrib(\u0026#39;dtp\u0026#39;) #Var trunk_init = False mac_addr = \u0026#34;00:1b:21:a5:ac:36\u0026#34; interface = \u0026#34;eth0\u0026#34; while not trunk_init: #Listen for DTP frames print(\u0026#34;[~] Listening for DTP packet...\u0026#34;) pkt = sniff(count=1, iface=interface, filter=\u0026#34;ether dst 01:00:0c:cc:cc:cc\u0026#34;) print(\u0026#34;[~] Found DTP packet\u0026#34;) #Craft malicious packet pkt[0].src=mac_addr pkt[0][DTP][DTPStatus].status=\u0026#39;\\x03\u0026#39; #Trunk initialization print(\u0026#34;[!] Intiating trunk...\u0026#34;) try: sendp(pkt[0], loop=0, verbose=1, iface=interface) print(\u0026#34;[!] Trunk initiated\u0026#34;) trunk_init=True except: print(\u0026#34;[!] Failed intiating trunk\u0026#34;) Ce script utilise la librairie scapy avec l\u0026rsquo;import de DTP. On peut écouter le traffic à la recherche d\u0026rsquo;une trame avec pour adresse MAC de destination l\u0026rsquo;adresse mutlicast reservée aux protocoles Cisco type CDP, DTP etc\u0026hellip; On récupère ce paquet, on change l\u0026rsquo;adresse source par la notre, le statut d\u0026rsquo;établissement du lien trunk à \\x03 (lien en mode desirable) puis renvoyer le paquet. Juste après notre lien tombe et remonte de manière presque instantanée\nLe résultat d\u0026rsquo;exécution de notre script: On peut maintenant vérifier l\u0026rsquo;état du trunk: On remarque qu\u0026rsquo;un lien trunk a été établi entre le switch et notre ordinateur qui n\u0026rsquo;est donc plus dans un port en mode accès. On peut donc écouter le traffic provenant d\u0026rsquo;autres VLANs et même crafter nos propres paquets avec un tag spécifique. Dans le but de vérifier mon PoC j\u0026rsquo;ai écouté le traffic jusqu\u0026rsquo;à voir un paquet ARP en provenance de notre PC2 sur le VLAN 200: Cela nous permet de confirmer notre PoC. Pour aller un peu plus loin, j\u0026rsquo;ai démarré un serveur web sur ma machine attaquante et je m\u0026rsquo;y suis connecté avec le PC2 (encore les avantages du simple PoC), (et oui j\u0026rsquo;avais la flemme de forger mes propres paquets): Mitigations Maintenant que nous avons été capables d\u0026rsquo;exploiter ce VLAN Hopping, comment pouvons-nous éviter que cela nous arrive sur notre propre réseau, et comment au moins rendre la vie plus difficile à un attaquant ? Il existe quelques patches possibles, ici je donnerai les équivalents de commandes pour Cisco mais en quelques recherches on peut trouver pour à peu près tous les constructeurs.\nMitigate Double Tagging Le Double Tagging est très difficile à éviter mais on peut drastiquement le limiter de la manière suivante:\n Changer le VLAN natif  switchport trunk native vlan [vlan number]   Désactiver les protocoles pouvant donner des informations sur le fonctionnement du réseau (CDP par exemple)  no cdp run   Forcer le tagging des VLANs natifs  vlan dot1q tag native    Mitigate Switch Spoofing Vous pouvez limiter le Switch Spoofing comme ceci:\n Désactiver DTP sur tous les ports  switchport nonegotiate   Toujours mettre les ports qui ne sont pas des trunks prévus en mode accès  switchport mode access   Utiliser les mêmes bonnes pratiques que pour le double tagging.  Conclusion Afin de conclure ce billet, je voudrais remercier les lecteurs pour avoir tenu jusqu\u0026rsquo;ici. Si jamais l\u0026rsquo;article vous a plu ou appris quoi que ce soit alors n\u0026rsquo;hésitez pas à le partager.\nSi jamais vous pensez que certaines précisions/corrections sont à apporter n\u0026rsquo;hésitez pas à me contacter sur mes réseaux sociaux, Twitter ici ou sur Discord \\`#0001.\nMerci à Flag\u0026rsquo;Malo de m\u0026rsquo;avoir donné l\u0026rsquo;opportunité de réaliser mon premier talk.\nEt comme je n\u0026rsquo;ai fait de blague à propos de Cisco que deux fois, en voici une troisième pour finir l\u0026rsquo;article en beauté ! ","permalink":"https://bwlryq.net/fr/posts/vlan_hopping/","summary":"Article à propos du VLAN Hopping ainsi que les techniques d\u0026rsquo;exploitation et de limitation de cette attaque","title":"Réseau - VLAN Hopping"},{"content":"En construction\u0026hellip;\n","permalink":"https://bwlryq.net/fr/cheatsheets/soon/","summary":"En construction\u0026hellip;","title":""},{"content":"Bonjour, bienvenue sur ce blog. Je suis bWlrYQ mais la plupart des gens m\u0026rsquo;appellent \u0026ldquo;Mika\u0026rdquo; pour d' évidentes raisons n\u0026rsquo;est-ce pas ? Je suis un étudiant de 20 ans qui étudie les réseaux et l\u0026rsquo;administration système, quand je ne suis pas à demi endormi\u0026hellip;\nMes études ne sont pas vraiment liées à la cybersécurité au premier sens du terme, bien que les bonnes pratiques y soient inculquées, la sécurité ne forme pas le coeur de mes études mais celle-ci est une passione depuis bien des années déjà. J\u0026rsquo;ai pu m\u0026rsquo;y intéresser et pratiquer au travers de plateformes telles que Root-Me ou TryHackMe. Je participe aussi à de nombreuses conférences de sécurité informatique ainsi qu\u0026rsquo;à des CTFs avec l\u0026rsquo;équipe EGO+. En plus, je suis un membre actif de la communauté Root-Me et suis bénévole au sein de l\u0026rsquo;équipe \u0026ldquo;Quality Assurance\u0026rdquo; depuis Février 2022.\nCe site a pour but de centraliser des articles, des write-ups de CTF ou encore des projets que j\u0026rsquo;ai pu réaliser dans un cadre personnel ou scolaire. Si jamais ce blog ou l\u0026rsquo;un de ses billets a su vous intéresser n\u0026rsquo;hésitez pas à la partager à d\u0026rsquo;autres personnes. N\u0026rsquo;hésitez pas à me contacter via Twitter ou Discord : \\`#0001 pour toute demande.\n","permalink":"https://bwlryq.net/fr/whoami/","summary":"Présentation de brève de qui je suis.","title":"Qui suis-je ?"}]